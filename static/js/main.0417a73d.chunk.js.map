{"version":3,"sources":["components/PageContainer/PageContainer.tsx","components/Button/Button.tsx","components/Card/Card.tsx","pages/LoginPage/store/reducers.ts","pages/LoginPage/store/index.ts","components/TextInput/TextInput.tsx","pages/LoginPage/LoginPage.tsx","App.tsx","index.tsx"],"names":["PageContainer","className","children","cn","Button","disabled","type","tabIndex","onClick","undefined","Card","width","reducer","state","action","username","payload","isError","password","isButtonDisabled","helperText","initialState","Eye","icon","faEye","EyeSlash","faEyeSlash","TextInput","error","shared","isPassword","useState","showPassword","setShowPassword","handleChange","useCallback","event","preventDefault","onChange","target","value","handleShowPassword","input","useMemo","LoginPage","useReducer","dispatch","useEffect","trim","handleLogin","document","documentElement","style","setProperty","handleKeyPress","keyCode","which","handlePasswordChange","handleEmailChange","placeholder","onKeyPress","visible","to","App","path","element","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0417a73d.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport cn from 'classnames';\n\nimport './PageContainer.css';\n\nexport type PageContainerProps = {\n    className?: string;\n}\n\nexport const PageContainer: FC<PageContainerProps> = ({\n    className,\n    children,\n}) => {\n    return (\n        <div  className={cn('PageContainer', className)}>\n            {children}\n        </div>\n    );\n}","import React, { FC } from 'react';\nimport cn from 'classnames';\n\nimport './Button.css';\n\nexport type ButtonProps = {\n    className?: string;\n    children: string;\n    disabled?: boolean;\n    type?: 'button' | 'submit';\n    tabIndex?: number;\n    onClick?: () => void;\n}\n\nexport const Button: FC<ButtonProps> = ({\n    className,\n    children,\n    disabled,\n    type,\n    tabIndex,\n    onClick\n}) => {\n    return (\n        <button\n            className={cn('Button', { disabled }, className)}\n            type={type}\n            tabIndex={tabIndex}\n            onClick={disabled ? undefined : onClick}\n        >\n            <span className={cn('Button-text')}>{children}</span>\n        </button>\n    );\n}","import React, { FC } from 'react';\nimport cn from 'classnames';\n\nimport './Card.css';\n\nexport type CardProps = {\n    className?: string;\n\n    width?: 'full' | 'feat';\n}\n\nexport const Card: FC<CardProps> = ({\n    className,\n    children,\n    width = 'feat',\n}) => {\n    return (\n        <div  className={cn('Card', { [`Card-${width}`]: true }, className)}>\n            {children}\n        </div>\n    );\n}","import { State } from \"../../../typings\";\nimport { Action } from \"./actions\";\n\nexport const reducer = (state: State, action: Action): State => {\n    switch (action.type) {\n        case 'setUsername': \n            return {\n                ...state,\n                username: action.payload,\n                isError: false,\n            };\n        case 'setPassword': \n            return {\n                ...state,\n                password: action.payload,\n                isError: false,\n            };\n        case 'setIsButtonDisabled': \n            return {\n                ...state,\n                isButtonDisabled: action.payload\n            };\n        case 'loginSuccess': \n            return {\n                ...state,\n                helperText: action.payload,\n                isError: false\n            };\n        case 'loginFailed': \n            return {\n                ...state,\n                helperText: action.payload,\n                isError: true\n            };\n        case 'setIsError': \n            return {\n                ...state,\n                isError: action.payload\n            };\n    }\n}","import { State } from \"../../../typings\";\nexport * from './actions';\nexport * from './reducers';\n\nexport const initialState:State = {\n    username: '',\n    password: '',\n    isButtonDisabled: true,\n    helperText: '',\n    isError: false\n};","import React, { FC, useCallback, useMemo, useState } from 'react';\nimport cn from 'classnames';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye, faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\n\n\nimport './TextInput.css';\n\nconst Eye = <FontAwesomeIcon className=\"icon\" icon={faEye} />;\nconst EyeSlash = <FontAwesomeIcon className=\"icon\" icon ={faEyeSlash}/>;\n\ninterface TextInputProps \n    extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'value'> {\n    className?: string;\n    error?: boolean;\n    value?: string;\n}\n\nexport const TextInput: FC<TextInputProps> = ({\n    className,\n    error,\n    ...shared\n}) => {\n    const isPassword = shared?.type === 'password';\n    const [showPassword, setShowPassword] = useState(false)\n\n    const handleChange = useCallback((event) => {\n        event.preventDefault();\n        shared.onChange?.(event.target.value)\n    }, [shared]);\n\n    const handleShowPassword = useCallback(() => {\n        setShowPassword(!showPassword);\n    }, [showPassword]);\n\n    const input = useMemo(() => (\n        <input\n            className={cn('TextInput__input')}\n            onChange={handleChange}\n            {...shared}\n            type={isPassword ? (showPassword ? 'text' : 'password') : shared?.type}\n        />\n    ), [handleChange, isPassword, shared, showPassword]);\n\n    return (\n        <div className={cn('TextInput', { 'TextInput__error': error }, className)}>\n            {input}\n            {isPassword && \n                <>{showPassword ? \n                    <i onClick={handleShowPassword}>{Eye}</i>:\n                    <i onClick={handleShowPassword}>{EyeSlash}</i>}\n                </>\n            }\n        </div>\n    );\n}","import React, { useReducer, useEffect, useCallback } from 'react';\nimport { Button } from '../../components/Button';\nimport { Card } from '../../components/Card';\nimport { PageContainer } from '../../components/PageContainer';\nimport { initialState, reducer } from './store';\nimport cn from 'classnames';\n\nimport './LoginPage.css';\nimport { TextInput } from '../../components/TextInput/TextInput';\nimport { Link } from 'react-router-dom';\n\nexport const LoginPage = () => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    useEffect(() => {\n        if (state.username.trim() && state.password.trim()) {\n            dispatch({\n                type: 'setIsButtonDisabled',\n                payload: false\n            });\n        } else {\n            dispatch({\n                type: 'setIsButtonDisabled',\n                payload: true\n            });\n        }\n    }, [state.username, state.password]);\n\n    const handleLogin = useCallback(() => {\n        // Тут по хорошему нормальный запрос на бек, но для шоу сделаем так\n        if (state.username === 'test@email.com' && state.password === 'password') {\n            dispatch({\n                type: 'loginSuccess',\n                payload: 'Login Successfully'\n            });\n            document.documentElement.style.setProperty('--card-shadow-color-1', 'rgba(110, 252, 252, 0.8)');\n            document.documentElement.style.setProperty('--card-shadow-color-2', 'rgba(66, 155, 155, 0.8)');\n        } else {\n            dispatch({\n                type: 'loginFailed',\n                payload: 'Incorrect username or password'\n            });\n            document.documentElement.style.setProperty('--card-shadow-color-1', 'rgba(252, 110, 110, 0.8)');\n            document.documentElement.style.setProperty('--card-shadow-color-2', 'rgba(252, 110, 110, 0.8)');\n        }\n    }, [state.password, state.username]);\n\n    const handleKeyPress = useCallback((event: React.KeyboardEvent) => {\n        if (event.keyCode === 13 || event.which === 13) {\n            state.isButtonDisabled || handleLogin();\n        }\n    }, [handleLogin, state.isButtonDisabled]);\n\n    const handlePasswordChange: React.ChangeEventHandler<HTMLInputElement> = useCallback((event) => {\n            dispatch({\n                type: 'setPassword',\n                payload: event.target.value\n            });\n    }, []);\n\n    const handleEmailChange: React.ChangeEventHandler<HTMLInputElement> = useCallback((event) => {\n        dispatch({\n            type: 'setUsername',\n            payload: event.target.value\n        });\n    }, []);\n\n    return (\n        <PageContainer className={cn('LoginPage')}>\n            <Card className={cn('LoginPage__card')}>\n                <h1 className={cn('LoginPage__card-title')}>Welcome Back</h1>\n                <TextInput\n                    className={cn('LoginPage__card-input')}\n                    type={'text'}\n                    placeholder={'Email'}\n                    tabIndex={1}\n                    onChange={handleEmailChange}\n                    onKeyPress={handleKeyPress}\n                    error={state.isError}\n                />\n                <TextInput \n                    className={cn('LoginPage__card-input')}\n                    type={'password'}\n                    placeholder={'Password'}\n                    tabIndex={2}\n                    onChange={handlePasswordChange}\n                    onKeyPress={handleKeyPress}\n                    error={state.isError}\n                />\n                <span\n                    className={cn('LoginPage__card-error', { visible: state.isError })}\n                >\n                    {state.helperText}\n                </span>\n                <Button\n                    children={'Sign In'}\n                    className={'test'}\n                    disabled={state.isButtonDisabled}\n                    tabIndex={3}\n                    onClick={handleLogin}\n                />\n                <div className={cn('LoginPage__card-link')}>\n                    New here? <Link to=\"/register\">Create account</Link>\n                </div>\n                <div className={cn('LoginPage__card-link')}>\n                    <Link to=\"/forgot\">Forgot your password?</Link>\n                </div>\n            </Card>\n        </PageContainer>\n    );\n}\n","import React from 'react'; \nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { PageContainer } from './components/PageContainer';\nimport { LoginPage } from './pages/LoginPage/LoginPage';\n\nexport const App = () => (\n  <Router>\n      <div className=\"App\">\n          <Routes>\n              <Route path=\"/\" element={<LoginPage />} />\n              <Route path=\"/login\" element={<LoginPage />}/>\n              <Route\n                  path=\"/register\"\n                  element={\n                      <PageContainer>\n                          <p>Быть может доработаем в будущем</p>\n                      </PageContainer>\n                  }\n              />\n              <Route\n                  path=\"/forgot\"\n                  element={\n                    <PageContainer>\n                        <p>\n                            Забывать пароли - плохо, но есть тестовый юзер:\n                            <br />\n                            <br />\n                            <code>Email: test@email.com</code>\n                            <br />\n                            <code>Password: password</code>\n                        </p>\n                    </PageContainer>\n                  }\n              />\n          </Routes>\n      </div>\n  </Router>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}